package peliculas;

 
import BD_21.LoginBD;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Event;
import java.awt.FlowLayout;
import java.awt.GridLayout;
import java.awt.Image;
import java.awt.List;
import java.awt.event.ActionEvent;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.MouseMotionAdapter;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.math.BigDecimal;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.Enumeration;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.RowFilter;
import javax.swing.RowSorter;
import javax.swing.TransferHandler;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author profesor
 */
public class Principal extends MiVentana  {

    JComboBox ComboEditorGeneros = new JComboBox();
    JLabel etiquetaActual;
   // Connection conn;
    
    HashMap<Integer,String[]> listaAct;
    //static JTable TablaPeliculas= new JTable();
    
    public Principal(String titulo, int ancho,int alto) {
        super(titulo,ancho,alto);
        initComponents();
        
         reparto.addMouseListener(new MouseAdapter(){
              @Override
              public void mouseClicked(MouseEvent e) {
                                   
                  if (e.getClickCount() == 2 && e.getButton() == MouseEvent.BUTTON1) {
                   String resp =JOptionPane.showInputDialog(null, "Nuevos Actores", "Actores EXternos", JOptionPane.OK_CANCEL_OPTION);
                   
                   //split a String y añadir a la lista....
                  }
                  
              }
           
          });
        
        // conn= (new LoginBD(this, true)).getConn();
        
        CargaComboOracle (ComboGeneros,"genero");
        CargaComboOracle (ComboEditorGeneros,"genero");
        CargaComboOracle (ComboDirectores,"director");
        CargaJTable(TablaPeliculas, 
        "select codigo_pelicula,nombre,director,genero,estreno,publico,imagen from peliculas order by nombre",
        comboColumnasDvd);
        
        //ComboEditorGeneros.setModel(ComboGeneros.getModel());
        TableColumn generosColumn = TablaPeliculas.getColumnModel().getColumn(2);
        generosColumn.setCellEditor(new DefaultCellEditor(ComboEditorGeneros));
        
        listaAct= cargaListaAcctores();
        cargaActores2(new Integer(0), listaActoresDisp);
        cargarCaratulas();
        
        etiquetaFoto.setTransferHandler(new TransferHandler("icon"));
        /*
        etiquetaFoto.addMouseListener(new MouseAdapter(){
            public void mousePressed(MouseEvent e) {
                JComponent c = (JComponent) e.getSource();
                TransferHandler handler = c.getTransferHandler();
                handler.exportAsDrag(c, e, TransferHandler.COPY);
              }
        });**/
       // etiquetaFoto.addComponentListener(cl);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        estrenada = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        TablaPeliculas = new javax.swing.JTable();
        Caratula = new javax.swing.JLabel();
        et = new javax.swing.JLabel();
        labelListados = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        labelTotal = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        listaActores = new javax.swing.JList();
        et1 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboColumnasDvd = new javax.swing.JComboBox<>();
        textFieldPelicula = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        labelTotal1 = new javax.swing.JLabel();
        labelTotal2 = new javax.swing.JLabel();
        mostrados = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        total = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        ComboGeneros = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        ComboDirectores = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        nuevoTitulo = new javax.swing.JTextField();
        nuevoGenero = new javax.swing.JTextField();
        nuevaCaratula = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        botonEligeFoto = new javax.swing.JButton();
        etiquetaFoto = new javax.swing.JLabel();
        radioEstrendaSi = new javax.swing.JRadioButton();
        radioEstrendaNo = new javax.swing.JRadioButton();
        radioPublicoSi = new javax.swing.JRadioButton();
        radioPublicoNo = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaActoresDisp = new javax.swing.JList<>();
        jLabel11 = new javax.swing.JLabel();
        guardarPeli = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        nuevoCodigo = new javax.swing.JLabel();
        nuevoDirector = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        aReparto = new javax.swing.JButton();
        deReparto = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        reparto = new javax.swing.JList<>();
        scrollPeliculas = new javax.swing.JScrollPane();
        panelCaratulas = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jTextField4 = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList2 = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox<>();
        jComboBox2 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);

        TablaPeliculas.setAutoCreateRowSorter(true);
        TablaPeliculas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo", "Nombre", "Director", "Genero", "Estrenada?", " Público?", "Caratula"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaPeliculas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaPeliculasMouseClicked(evt);
            }
        });
        TablaPeliculas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                TablaPeliculasKeyReleased(evt);
            }
        });
        jScrollPane2.setViewportView(TablaPeliculas);
        TablaPeliculas.getAccessibleContext().setAccessibleName("");
        TablaPeliculas.getAccessibleContext().setAccessibleDescription("");

        Caratula.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 255), 2));

        et.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        et.setForeground(new java.awt.Color(255, 51, 51));
        et.setText("Actores...");

        labelListados.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        labelListados.setForeground(new java.awt.Color(255, 0, 0));
        labelListados.setText("Listados");
        labelListados.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel6.setText("De");

        labelTotal.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        labelTotal.setForeground(new java.awt.Color(255, 0, 0));
        labelTotal.setText("Total");
        labelTotal.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        listaActores.setToolTipText("");
        jScrollPane3.setViewportView(listaActores);

        et1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        et1.setForeground(new java.awt.Color(255, 51, 51));
        et1.setText("Carátula...");

        jLabel7.setText("Columnas...");

        comboColumnasDvd.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elige Columna" }));
        comboColumnasDvd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboColumnasDvdActionPerformed(evt);
            }
        });

        textFieldPelicula.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                textFieldPeliculaKeyReleased(evt);
            }
        });

        jLabel8.setText("Dato a Buscar...");

        labelTotal1.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        labelTotal1.setForeground(new java.awt.Color(255, 0, 0));
        labelTotal1.setText("Total");
        labelTotal1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        labelTotal2.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        labelTotal2.setForeground(new java.awt.Color(255, 0, 0));
        labelTotal2.setText("Total");
        labelTotal2.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        mostrados.setText("jLabel4");
        mostrados.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        jLabel4.setText("De...");

        total.setText("jLabel4");
        total.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 503, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(et)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(et1)
                        .addGap(43, 43, 43))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(Caratula, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(88, 88, 88)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(comboColumnasDvd, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(textFieldPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(295, 295, 295)
                        .addComponent(labelTotal1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(189, 189, 189)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelListados)
                            .addComponent(mostrados, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addGap(28, 28, 28)
                                .addComponent(labelTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(509, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(305, 305, 305)
                    .addComponent(labelTotal2, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(499, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textFieldPelicula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboColumnasDvd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(et)
                            .addComponent(et1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 181, Short.MAX_VALUE)
                            .addComponent(Caratula, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(5, 5, 5))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(mostrados, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(total, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(253, 253, 253)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelListados)
                    .addComponent(jLabel6)
                    .addComponent(labelTotal))
                .addGap(285, 285, 285)
                .addComponent(labelTotal1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap(556, Short.MAX_VALUE)
                    .addComponent(labelTotal2)
                    .addGap(348, 348, 348)))
        );

        jTabbedPane1.addTab("Burcar Peliculas...", jPanel1);

        jLabel2.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(0, 0, 255));
        jLabel2.setText("Género...");

        ComboGeneros.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un Genero" }));
        ComboGeneros.setToolTipText("");
        ComboGeneros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboGenerosActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 255));
        jLabel3.setText("Director...");

        ComboDirectores.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione un Director" }));
        ComboDirectores.setToolTipText("");
        ComboDirectores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboDirectoresActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 153, 0));
        jLabel5.setText("Título...");

        nuevoTitulo.setText("jTextField1");

        nuevoGenero.setText("jTextField1");

        nuevaCaratula.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        nuevaCaratula.setText("jTextField1");

        jLabel9.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 51, 204));
        jLabel9.setText("Carátula...");

        botonEligeFoto.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        botonEligeFoto.setForeground(new java.awt.Color(153, 51, 0));
        botonEligeFoto.setText("Bucar Carátula...");
        botonEligeFoto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonEligeFotoActionPerformed(evt);
            }
        });

        etiquetaFoto.setToolTipText("");
        etiquetaFoto.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 51)));
        etiquetaFoto.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                etiquetaFotoComponentAdded(evt);
            }
        });
        etiquetaFoto.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                etiquetaFotoPropertyChange(evt);
            }
        });
        etiquetaFoto.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                etiquetaFotoVetoableChange(evt);
            }
        });

        buttonGroup1.add(radioEstrendaSi);
        radioEstrendaSi.setText("Estrenada");

        buttonGroup1.add(radioEstrendaNo);
        radioEstrendaNo.setText("No Estrenada");

        buttonGroup2.add(radioPublicoSi);
        radioPublicoSi.setText("Con Público");
        radioPublicoSi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioPublicoSiActionPerformed(evt);
            }
        });

        buttonGroup2.add(radioPublicoNo);
        radioPublicoNo.setText("Sin Público");

        listaActoresDisp.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listaActoresDisp);

        jLabel11.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(0, 51, 204));
        jLabel11.setText("Reparto (Actores)");

        guardarPeli.setText("Guardar Peli...");
        guardarPeli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarPeliActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 51, 255));
        jLabel12.setText("Codigo Peli.:");

        nuevoCodigo.setText("codP.");
        nuevoCodigo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 0, 102)));
        nuevoCodigo.setEnabled(false);
        nuevoCodigo.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        nuevoDirector.setText("jTextField1");

        jLabel13.setFont(new java.awt.Font("Comic Sans MS", 0, 14)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(0, 51, 204));
        jLabel13.setText("Actores disponibles ...");

        aReparto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        aReparto.setText("->");
        aReparto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aRepartoActionPerformed(evt);
            }
        });

        deReparto.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        deReparto.setText("<-");
        deReparto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deRepartoActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(reparto);

        javax.swing.GroupLayout panelCaratulasLayout = new javax.swing.GroupLayout(panelCaratulas);
        panelCaratulas.setLayout(panelCaratulasLayout);
        panelCaratulasLayout.setHorizontalGroup(
            panelCaratulasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 801, Short.MAX_VALUE)
        );
        panelCaratulasLayout.setVerticalGroup(
            panelCaratulasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 135, Short.MAX_VALUE)
        );

        scrollPeliculas.setViewportView(panelCaratulas);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(nuevoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(3, 3, 3)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(ComboGeneros, 0, 140, Short.MAX_VALUE)
                            .addComponent(nuevoGenero))
                        .addGap(42, 42, 42)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(ComboDirectores, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nuevoDirector, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botonEligeFoto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nuevaCaratula, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(etiquetaFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(radioEstrendaNo)
                            .addComponent(radioPublicoSi)
                            .addComponent(radioPublicoNo)
                            .addComponent(radioEstrendaSi)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nuevoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(guardarPeli)))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(aReparto)
                                    .addComponent(deReparto)))
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel11)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(scrollPeliculas, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(nuevaCaratula, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(botonEligeFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jLabel9)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(27, 27, 27)
                            .addComponent(etiquetaFoto, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ComboGeneros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(nuevoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nuevoGenero, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ComboDirectores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(8, 8, 8)
                                .addComponent(nuevoDirector, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(radioEstrendaSi)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radioEstrendaNo)
                                        .addGap(21, 21, 21)
                                        .addComponent(radioPublicoSi)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radioPublicoNo)
                                        .addGap(18, 18, 18)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel12)
                                            .addComponent(nuevoCodigo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(guardarPeli)
                                        .addGap(25, 25, 25))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(73, 73, 73)
                                        .addComponent(aReparto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(deReparto, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1)))))
                .addGap(9, 9, 9)
                .addComponent(scrollPeliculas))
        );

        jTabbedPane1.addTab("Añadir Peliculas...", jPanel2);

        jLabel10.setText("Titulo");

        jLabel14.setText("Género");

        jLabel15.setText("Director");

        jLabel16.setText("Carátula");

        jLabel17.setText("Reparto");

        jLabel18.setText("Actores Dispo");

        jLabel19.setText("jLabel10");

        jTextField1.setText("jTextField1");

        jTextField2.setText("jTextField1");

        jTextField3.setText("jTextField1");

        jTextField4.setText("jTextField1");

        jLabel20.setText("jLabel10");
        jLabel20.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        estrenada.add(jRadioButton1);
        jRadioButton1.setText("Estrenada");
        jRadioButton1.setToolTipText("");

        estrenada.add(jRadioButton2);
        jRadioButton2.setText("No Estrenada");
        jRadioButton2.setToolTipText("");

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane5.setViewportView(jList1);

        jList2.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(jList2);

        jButton2.setText("Buscar Carátula");

        estrenada.add(jRadioButton3);
        jRadioButton3.setText("Con Público");
        jRadioButton3.setToolTipText("");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        estrenada.add(jRadioButton4);
        jRadioButton4.setText("Sin Público");
        jRadioButton4.setToolTipText("");

        jLabel21.setText("Codigo Peli:");

        jLabel22.setText("jLabel22");
        jLabel22.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jButton3.setText("Guardar Peli...");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton4.setText("jButton4");

        jButton5.setText("jButton4");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jLabel19))
                    .addComponent(jRadioButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jRadioButton4, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jRadioButton2, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel21)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel22)))
                        .addGap(27, 27, 27))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jTextField1)
                                .addGap(10, 10, 10)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(51, 51, 51)
                                .addComponent(jLabel17))
                            .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel16)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(1, 1, 1))
                    .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 304, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(8, 8, 8)
                                .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(5, 5, 5)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel18)
                                    .addComponent(jLabel17))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jScrollPane6, javax.swing.GroupLayout.DEFAULT_SIZE, 189, Short.MAX_VALUE)
                                    .addComponent(jScrollPane5)))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jRadioButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jRadioButton2)
                                        .addGap(31, 31, 31)
                                        .addComponent(jRadioButton3)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jRadioButton4)
                                        .addGap(32, 32, 32)
                                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(jLabel21)
                                            .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                        .addComponent(jButton3))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addGap(85, 85, 85)
                                        .addComponent(jButton4)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton5)
                                        .addGap(0, 0, Short.MAX_VALUE)))))))
                .addGap(315, 315, 315)
                .addComponent(jLabel19)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("pelis", jPanel3);

        jLabel1.setBackground(new java.awt.Color(204, 255, 204));
        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 255));
        jLabel1.setText("VideoCLub Martín Rivero");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 854, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(101, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 506, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ComboGenerosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboGenerosActionPerformed
       String genero =((JComboBox)evt.getSource()).getSelectedItem().toString();
       // JOptionPane.showMessageDialog(null, "Seleccionaste el Genero-> "+ genero );
        
       int indice = ((JComboBox)evt.getSource()).getSelectedIndex();
       if(indice==0)
           genero="";
       //else
        nuevoGenero.setText(genero);
              
        
    }//GEN-LAST:event_ComboGenerosActionPerformed

    private void ComboDirectoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboDirectoresActionPerformed
        nuevoDirector.setText((String)contenidoCombo(evt));
    }//GEN-LAST:event_ComboDirectoresActionPerformed

    private void TablaPeliculasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaPeliculasMouseClicked
    /*  cambiaCaratula();
      cargaActores( TablaPeliculas.getValueAt(TablaPeliculas.getSelectedRow(), 0), listaActores);
      */
      KeyEvent ke = 
                new KeyEvent( TablaPeliculas, KeyEvent.KEY_RELEASED, 1,1,1,'a');
                TablaPeliculas.dispatchEvent(ke);
      
      
    }//GEN-LAST:event_TablaPeliculasMouseClicked

    private void TablaPeliculasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_TablaPeliculasKeyReleased
       cambiaCaratula();
       cargaActores((int) TablaPeliculas.getValueAt(TablaPeliculas.getSelectedRow(), 0), listaActores);
    }//GEN-LAST:event_TablaPeliculasKeyReleased

    private void textFieldPeliculaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_textFieldPeliculaKeyReleased
        String filtro ="^"+textFieldPelicula.getText();
        int  col = comboColumnasDvd.getSelectedIndex()-1;
        // }
        RowFilter filtraPelis = RowFilter.regexFilter(filtro, col);

        TableRowSorter ordena=(TableRowSorter) TablaPeliculas.getRowSorter();
        ordena.setRowFilter(filtraPelis);
        
        Integer filasActuales =TablaPeliculas.getRowCount();
        mostrados.setText(filasActuales.toString());
    }//GEN-LAST:event_textFieldPeliculaKeyReleased

    private void botonEligeFotoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonEligeFotoActionPerformed
        //cargaRutaFichero(etiquetaFoto1,textoNuevaFoto,"fotos");
        cargaRutaFichero(etiquetaFoto,nuevaCaratula,"img");
    }//GEN-LAST:event_botonEligeFotoActionPerformed

    private void radioPublicoSiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioPublicoSiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioPublicoSiActionPerformed

    private void aRepartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aRepartoActionPerformed
        //cambiaActoresDeLista( evt);     
        
        mueveActores(listaActoresDisp, (DefaultListModel)listaActoresDisp.getModel(), (DefaultListModel)reparto.getModel());
       
    }//GEN-LAST:event_aRepartoActionPerformed

    private void deRepartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deRepartoActionPerformed
         //cambiaActoresDeLista( evt); 
         mueveActores(reparto, (DefaultListModel)reparto.getModel(), (DefaultListModel)listaActoresDisp.getModel());
         
    }//GEN-LAST:event_deRepartoActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void comboColumnasDvdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboColumnasDvdActionPerformed
        // disparar un keyRelease en el campo textFieldPelicula
       // textFieldPeliculaKeyReleased(textFieldPelicula );
       this.textFieldPeliculaKeyReleased(new KeyEvent(this, 0, 0, 0, 0, '0'));
       
        
    }//GEN-LAST:event_comboColumnasDvdActionPerformed

    private void guardarPeliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarPeliActionPerformed
       //1.- Comprobar los campos obligatorios
       if(compruebaDatosPeli()){
          
       //2.- recoger los datos
       //3.- añadir al modelo de la tabla la fila,
       
        Object[] fila = new Object[TablaPeliculas.getColumnCount()];
        String peli="";
                               
        fila[0] = Integer.parseInt(nuevoCodigo.getText());
        fila[1] = nuevoTitulo.getText();
        fila[2] = nuevoDirector.getText();
        fila[3] = nuevoGenero.getText();
        //String estreno =rs.getString("ESTRENO");
        if (radioEstrendaSi.isSelected())//estrenada
          fila[4] = true;//1;
        else  fila[4] = false;
        
        if (radioPublicoSi.isSelected())//con publico
         fila[5] = true;//1;
        else  fila[5] = false;//0;
        
        fila[6] = nuevaCaratula.getText();
        
        for (Object object : fila) {
            peli+=object+" - ";
        }
        
        if(aceptaCancela("Quieres <<Insertar>> esta película?\n"+peli, "Borrando Películas...",
                             "Se Insertará la Pelicula","inserción de Pelicula, cancelada!")){
            // Se añade al modelo de la tabla
            ((DefaultTableModel) TablaPeliculas.getModel()).addRow(fila);
            // Se inserta en la Bd
            insertaEnBD(fila);
            // Guardamos los actores en el fichero de actores
            guardaActoresFichero((DefaultListModel)reparto.getModel(), Integer.parseInt(nuevoCodigo.getText()));
            // limpiamos los datos de la película
            limpiarPelicula();
      
        }
               
       }
       
    
    }//GEN-LAST:event_guardarPeliActionPerformed

    private void etiquetaFotoComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_etiquetaFotoComponentAdded
        // TODO add your handling code here:JO
        JOptionPane.showMessageDialog(null, "cambio la caratula-ComponentAdded");
    }//GEN-LAST:event_etiquetaFotoComponentAdded

    private void etiquetaFotoVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_etiquetaFotoVetoableChange
        // TODO add your handling code here:
         JOptionPane.showMessageDialog(null, "cambio la caratula-VetoableChange");
    }//GEN-LAST:event_etiquetaFotoVetoableChange

    private void etiquetaFotoPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_etiquetaFotoPropertyChange
        // TODO add your handling code here:
//        JOptionPane.showMessageDialog(null, "cambio la caratula-PropertyChange");
  //      ((JLabel)evt.getSource()).setText("Hola");
    }//GEN-LAST:event_etiquetaFotoPropertyChange
    /***********************************************************
     * @param args the command line arguments
     */
    //--------------------------------------------------------
     void limpiarPelicula(){
        radioEstrendaSi.setSelected(false);radioEstrendaNo.setSelected(false);
        nuevoTitulo.setText("");
        }
    
    public static void main(String args[]) {
                /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal("videoclub Martín Rivero",800,600).setVisible(true);
            }
        });
         
    }
    //---- Conecta Oracle......
    //---------- Conecta BD--------------------------------------
     static Connection  conectaOracle(){
         
        String url,usuario, password;
        
        Connection conn=null;
        usuario ="scott";password="tiger";
        url="jdbc:mysql://localhost/scott";
        
       /* usuario ="catastro";
        password="catastro";*/
        //url     ="jdbc:oracle:thin:@localhost:1521:XE";
       // url     ="jdbc:oracle:thin:@localhost:1521:sindoc";
       
        
        
        try {
            // 1) cargamos el Driver...
            //Class.forName("oracle.jdbc.driver.OracleDriver");
             Class.forName("com.mysql.jdbc.Driver");
            // 2) Obtener la conexion a la BD
            conn = DriverManager.getConnection(url, usuario, password);
            
            
        } catch (ClassNotFoundException ex) {
            System.out.println("Error: OracleDriver no encontrado-> "+ ex);
        } catch (SQLException ex) {
            System.out.println("Error: SQL-> "+ex);
        }
        return conn;
    }
    //---- Carga Combo.........
    
    //-----------Carga combo Comunidades-----------------
    private void CargaComboOracle (JComboBox lista,String columna){
        
        try {
            Connection conn = conectaOracle();
            Statement st    = conn.createStatement();
            ResultSet  rs;
                 
            rs= st.executeQuery
                    ("select distinct "+columna+" from peliculas order by "+ columna);
                    while(rs.next()){
                        lista.addItem(rs.getString(columna));
                    }
            
           /** 
            switch (tabla){
                case "genero":
                    rs= st.executeQuery
                    ("select distinct "+tabla+" from peliculas order by "+ tabla);
                    while(rs.next()){
                        lista.addItem(rs.getString(tabla));
                    }
                    break;
                case "director":
                     rs= st.executeQuery
                    ("select distinct director "+ tabla +" order by "+tabla);
                    //lista.removeAllItems();
                    lista.setModel(new DefaultComboBoxModel());
                    
                    while(rs.next()){
                        lista.addItem(rs.getString(tabla));
                    }
                break;
                
            } */
           
        } catch (SQLException ex) {
            System.out.println("Error-> "+ex.getMessage());
        }
        
    }
    //--------------------------------------------
    //------------ Carraga JTAble desde un Select........................
    private void CargaJTable(JTable tabla, String consulta, JComboBox lista){
        
        try {
            Connection conn=conectaOracle();
            ResultSet rs;
            
           // rs=conn.createStatement().executeQuery(consulta);
           rs=conn.createStatement().executeQuery(consulta);
                    
            DefaultTableModel dtm= (DefaultTableModel) tabla.getModel();
            int numeroColumnas = dtm.getColumnCount();
            
            if (lista!=null){
                ResultSetMetaData metaDatos =rs.getMetaData();
            
                for(int i=0;i<numeroColumnas; i++)
                lista.addItem(metaDatos.getColumnLabel(i+1));
            }
            
            // Bucle para procesar el resulseT y cargar las filas...
            Object[] fila = new Object[numeroColumnas];
           Integer numFilas=0;
                    
            while(rs.next()){
                numFilas++;
                for(int i=0; i<numeroColumnas; i++){
                    fila[i]= rs.getObject(i+1);
                }
                String estreno =rs.getString("ESTRENO");
                if (estreno.equals("0"))
                     fila[4]= false;
                else 
                    fila[4]= true;
                
                String publico =rs.getString("PUBLICO");
                if (publico.equals("0"))
                     fila[5]= false;
                else 
                    fila[5]= true;
                
                
                dtm.addRow(fila);
                
                
            }
            
            TableColumn generosColumn = tabla.getColumnModel().getColumn(3);
            generosColumn.setCellEditor(new DefaultCellEditor(ComboEditorGeneros));
            
            labelTotal.setText(  numFilas.toString());
            //dtm.getColumnCount()??
            total.setText(numFilas.toString());
            nuevoCodigo.setText((++numFilas).toString());
            
            Integer filasActuales =tabla.getRowCount();
            labelListados.setText(filasActuales.toString());
            mostrados.setText(filasActuales.toString());
            
             tabla.getColumnModel().getColumn(0).setMaxWidth(0);
             tabla.getColumnModel().getColumn(0).setMinWidth(0);
             tabla.getColumnModel().getColumn(0).setPreferredWidth(0);
            
             tabla.getColumnModel().getColumn(6).setMaxWidth(0);
             tabla.getColumnModel().getColumn(6).setMinWidth(0);
             tabla.getColumnModel().getColumn(6).setPreferredWidth(0);
             
              tabla.getColumnModel().getColumn(5).setMaxWidth(50);
             tabla.getColumnModel().getColumn(5).setMinWidth(50);
             tabla.getColumnModel().getColumn(5).setPreferredWidth(50);
             
              tabla.getColumnModel().getColumn(4).setMaxWidth(50);
             tabla.getColumnModel().getColumn(4).setMinWidth(50);
             tabla.getColumnModel().getColumn(4).setPreferredWidth(50);
             
               tabla.getColumnModel().getColumn(3).setMaxWidth(100);
             tabla.getColumnModel().getColumn(3).setMinWidth(100);
             tabla.getColumnModel().getColumn(3).setPreferredWidth(100);
            
           conn.close();
            
        } catch (SQLException ex) {
            System.out.println("error-> "+ ex.getMessage() );
        }
      
        
    }
    /*----------------
    private ArrayList filtraPelis(){
        
        ArrayList filtros = new ArrayList();
        RowFilter fitroGeneros= RowFilter.regexFilter((String)ComboGeneros.getSelectedItem(),3);
        RowFilter fitroDirectores= RowFilter.regexFilter((String)ComboDirectores.getSelectedItem(),2);
        RowFilter fitroEstreno;
        if(checkEstrenada.isSelected())
             fitroEstreno= RowFilter.regexFilter("true",4);
        else
             fitroEstreno= RowFilter.regexFilter("false",4);
        
        filtros.add(fitroGeneros);filtros.add(fitroDirectores);filtros.add(fitroEstreno);
        
        RowFilter fitroAnd =RowFilter.andFilter(filtros);
        RowFilter fitroOrd =RowFilter.orFilter(filtros);
        
        filtros.add(fitroAnd); filtros.add(fitroOrd);
        
        return filtros;
        
    }*/
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Caratula;
    private javax.swing.JComboBox<String> ComboDirectores;
    private javax.swing.JComboBox<String> ComboGeneros;
    private static javax.swing.JTable TablaPeliculas;
    private javax.swing.JButton aReparto;
    private javax.swing.JButton botonEligeFoto;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JComboBox<String> comboColumnasDvd;
    private javax.swing.JButton deReparto;
    private javax.swing.ButtonGroup estrenada;
    private javax.swing.JLabel et;
    private javax.swing.JLabel et1;
    private javax.swing.JLabel etiquetaFoto;
    private javax.swing.JButton guardarPeli;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jList1;
    private javax.swing.JList<String> jList2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel labelListados;
    private javax.swing.JLabel labelTotal;
    private javax.swing.JLabel labelTotal1;
    private javax.swing.JLabel labelTotal2;
    private javax.swing.JList listaActores;
    private javax.swing.JList<String> listaActoresDisp;
    private javax.swing.JLabel mostrados;
    private javax.swing.JTextField nuevaCaratula;
    private javax.swing.JLabel nuevoCodigo;
    private javax.swing.JTextField nuevoDirector;
    private javax.swing.JTextField nuevoGenero;
    private javax.swing.JTextField nuevoTitulo;
    private javax.swing.JPanel panelCaratulas;
    private javax.swing.JRadioButton radioEstrendaNo;
    private javax.swing.JRadioButton radioEstrendaSi;
    private javax.swing.JRadioButton radioPublicoNo;
    private javax.swing.JRadioButton radioPublicoSi;
    private javax.swing.JList<String> reparto;
    private javax.swing.JScrollPane scrollPeliculas;
    private javax.swing.JTextField textFieldPelicula;
    private javax.swing.JLabel total;
    // End of variables declaration//GEN-END:variables
private void cambiaCaratula(){
    String imagen=(String) TablaPeliculas.getValueAt(TablaPeliculas.getSelectedRow(),6);        // TODO add your handling code here:
   // Caratula.setIcon(new ImageIcon("img/"+imagen));
    
    ImageIcon fot = new ImageIcon("img/"+imagen);
    
    Icon icono = new ImageIcon(fot.getImage().getScaledInstance(Caratula.getWidth(), Caratula.getHeight(), Image.SCALE_DEFAULT));
    Caratula.setIcon(icono);
    
    
    Integer filasActuales =TablaPeliculas.getRowCount();
    labelListados.setText(filasActuales.toString());
    mostrados.setText(filasActuales.toString());
}
 //-------------------------------------------------------
HashMap cargaListaAcctores(){
   HashMap<Integer,String[]> listaAct = new HashMap();
   //HashMap<Integer,String> listaAct = new HashMap();
   BufferedReader br=null;
   FileReader cliente;
   String linea,peli[],actores[];
   
    ArrayList<String> listaDeActores = new ArrayList <String> ();
   
    try {
            cliente=  new FileReader("actores.txt");
            br     =  new BufferedReader(cliente);
            
            while( ((linea = br.readLine())!= null)){
                    peli=linea.split(";");
                    
                    actores         = peli[1].split(",");
                   // peli[1].replaceAll(",", "\n");
                   // listaDeActores  = Arrays.asList((actores);
                   //listaAct.put(Integer.parseInt(peli[0]), 
                   //             peli[1].replaceAll(",", "\r\n"));
                     
               listaAct.put(Integer.parseInt(peli[0]), actores);
            }  
    } catch (FileNotFoundException ex) {
            System.err.println("No se encuentra el fichero: actores.txt");//+ nombre);  
    } catch (IOException ex) {
            System.out.println("error-> "+ ex.getMessage());
    }finally{
              try {
                  br.close();
              } catch (IOException ex) {
                  System.err.println("IOException, cerrando el fichero cliente:"+ ex.getMessage());
              }
        }  
   
   return listaAct;
}
//-------------------------------------------------------------------------
    void cargaActores(int  codigoPeli, JList lista) {
        
        DefaultListModel modeloListaR= new DefaultListModel();
        reparto.setModel(modeloListaR);
            
            
        DefaultListModel modeloLista= new DefaultListModel();
        lista.setModel(modeloLista);
        
        if(listaAct.containsKey(codigoPeli)){
            String[] actores=listaAct.get(codigoPeli);
            for (String actor : actores) 
                modeloLista.addElement(actor);
            //modeloLista.addElement(listaAct.get(codigoPeli));
        } 
        else  modeloLista.addElement("Reparto no disponible");
        //modeloLista.addElement(listaAct.get(codigoPeli).toString());
        
    }
//-------------------------------------------------------------------------
    void cargaActores2(Object  codigoPeli, JList lista) {
          String linea,peli[],actores[];
          BufferedReader br=null;
          boolean encontrado=false;
            String codPeli = codigoPeli.toString();
          //BigDecimal codPeli = ((BigDecimal)codigoPeli);
         // int codPeli = ((Integer)codigoPeli).intValue();
         
                   
        try {
            FileReader cliente=  new FileReader("actores.txt");
            br                =  new BufferedReader(cliente);
            
            DefaultListModel modeloListaR= new DefaultListModel();
            reparto.setModel(modeloListaR);
            
            
            DefaultListModel modeloLista= new DefaultListModel();
            lista.setModel(modeloLista);
            
            while( ((linea = br.readLine())!= null)){// && !encontrado){
               peli=linea.split(";");
               if (  (peli[0].equalsIgnoreCase(codPeli)) || (codPeli.equalsIgnoreCase("0")) ) {
                     actores=peli[1].split(",");
                     
                     for(int i=0;i<actores.length;i++)
                         modeloLista.addElement(actores[i]);
                     
                     //break;
                     //encontrado=true;
                }          
           }
                             
        } catch (FileNotFoundException ex) {
            System.err.println("No se encuentra el fichero: actores.txt");//+ nombre);  
        } catch (IOException ex) {
            System.out.println("error-> "+ ex.getMessage());
        }finally{
              try {
                  br.close();
              } catch (IOException ex) {
                  System.err.println("IOException, cerrando el fichero cliente:"+ ex.getMessage());
              }
        }
        
      }
    
   static public void borrarPeli(){
               
    DefaultTableModel model = (DefaultTableModel) TablaPeliculas.getModel();
    if (TablaPeliculas.getSelectedRow() != -1) {
            if(aceptaCancela("Quieres eliminar esta película?", "Borrando Películas...",
                             "Se eliminará la Pelicula","Borrado Cancelado!"))
                    model.removeRow(TablaPeliculas.getSelectedRow());
        }
    else JOptionPane.showMessageDialog(null, "Seleccione la Pelicula a Borrar!");        
      
  }  
 //---
   private Object contenidoCombo(ActionEvent evt){
       String valor =((JComboBox)evt.getSource()).getSelectedItem().toString();
       // JOptionPane.showMessageDialog(null, "Seleccionaste el Genero-> "+ genero );
        
       int indice = ((JComboBox)evt.getSource()).getSelectedIndex();
       if(indice==0)
           valor="";
       return valor;
   }
//-------------------------------
   private String cargaRutaFichero(JLabel etiqueta,JTextField campo,String ruta){
        JFileChooser fichero=new JFileChooser();
        fichero.setCurrentDirectory(new File(ruta));
        
        File file=null;
        
         int returnVal = fichero.showOpenDialog(null);

              if (returnVal == JFileChooser.APPROVE_OPTION) {
                   file = fichero.getSelectedFile();
                  //This is where a real application would open the file.
                  System.out.println("Opening: " + file.getName() + "/n"+
                                        file.getAbsolutePath());
                  if(etiqueta !=null)
                    etiqueta.setIcon(new ImageIcon(ruta+"/"+file.getName()));
                  //boton1.setIcon(new ImageIcon(file.getAbsolutePath()));
                  if(campo !=null)
                    campo.setText(file.getName());
               
             
              } else {
                   System.out.println("Busqueda Cancelada...");
                   return "cancelado";
              }  
              return file.getName();
   }
//-----------------------
private void cambiaActoresDeLista(ActionEvent evt){
    ArrayList listaActores; 
        DefaultListModel modeloListaR,modeloListaA;
        modeloListaR= (DefaultListModel) reparto.getModel();
        modeloListaA= (DefaultListModel) listaActoresDisp.getModel();
        int[] indices;
        
      if(evt.getSource()==aReparto){
        listaActores=  (ArrayList) listaActoresDisp.getSelectedValuesList();
        indices = listaActoresDisp.getSelectedIndices();
        
         //  Añadir
        for(int i=0; i<listaActores.size(); i++) 
            modeloListaR.addElement(listaActores.get(i));
        
      //Eliminar
        for(int i=indices.length-1;i>=0;i--)
         modeloListaA.remove(indices[i]);
        
      }else{
         listaActores=  (ArrayList) reparto.getSelectedValuesList();
         indices = reparto.getSelectedIndices();
         
          //  Añadir
        for(int i=0; i<listaActores.size(); i++) 
            modeloListaA.addElement(listaActores.get(i));
        
        //ordenar
        Object[] actores    = modeloListaA.toArray();
        Arrays.sort(actores);
        
       // listaActoresDisp.removeAll();
        modeloListaA.removeAllElements();
        //listaActoresDisp.setListData( (String[])actores );
        for(int i=0; i<actores.length; i++) 
            modeloListaA.addElement(actores[i].toString());
          
     
      //Eliminar
        for(int i=indices.length-1;i>=0;i--)
         modeloListaR.remove(indices[i]);
          
      }
    
} 
//----------------------------------------------------------------------------------
//--- metodo Salir------------------------------------------------------------------
    public static boolean aceptaCancela(String mensaje, String titulo,String mensajeOK,String mensajeCancel){
        int res= JOptionPane.showConfirmDialog(null,mensaje,titulo,
                       JOptionPane.YES_NO_OPTION ,JOptionPane.QUESTION_MESSAGE);
               if(res==JOptionPane.YES_OPTION){
                            JOptionPane.showMessageDialog(null,mensajeOK);  
                            return true;
                          }  
               else  {  JOptionPane.showMessageDialog(null,mensajeCancel);      
                       return false;
               }
       
    }
 //-----------------------------------------------------------------------------
    public  boolean compruebaDatosPeli(){
        if(nuevoTitulo.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "Título de la Pelíula Obligatorio!");
            nuevoTitulo.requestFocus();
            return false;
        }
        if(!(radioEstrendaSi.isSelected() || radioEstrendaNo.isSelected())){
          JOptionPane.showMessageDialog(null, "Típo de Estreno Obligatorio!");
            radioEstrendaSi.requestFocus();
            return false;  
        }
        
        return true;
    }
    
  //------------Ordena Alfabeticamente un JList-------------------------------------------------------------------
    private static void ordenaJList(DefaultListModel listModel) {
        ArrayList<String> listActores = Collections.list(listModel.elements());
        Collections.sort(listActores);

        listModel.removeAllElements();
        listActores.forEach((actor) -> {
            listModel.addElement(actor);
        });
    }

    //-----------------------Guarda una película en la BD----------------------------------------------------------
    private static void insertaEnBD(Object[] nuevaPeli){
        PreparedStatement ps;

        try {
            Connection conn=conectaOracle();
            ps = conn.prepareStatement("insert into peliculas values (?,?,?,?,?,?,sysdate(),?)");
           
            ps.setInt(1, (int)nuevaPeli[0]);
            ps.setString(2,((String)nuevaPeli[1]).toUpperCase());
            ps.setString(3, ((String)nuevaPeli[2]).toUpperCase());
            ps.setString(4,((String)nuevaPeli[3]).toUpperCase());
            ps.setBoolean(5, (boolean)nuevaPeli[4]);
            ps.setBoolean(6, (boolean)nuevaPeli[5]);
            ps.setString(7, (String)nuevaPeli[1]);
            
            ps.executeUpdate();           
            ps.close();
            
            JOptionPane.showMessageDialog(null, nuevaPeli[1] + " añadida a la BD", "Película añadida correctamente.", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            System.out.println("Error de SQL -> " + ex.getMessage());   
        }
    }
    
    //-------------------------------------------------------------------------------------------------------------
    private static void guardaActoresFichero(DefaultListModel listModel, int idPelicula){
        String lineaActores = "\n" + idPelicula + ";";
        ArrayList<String> listActores = Collections.list(listModel.elements());
        
        for(Object actor : listActores){
            lineaActores += ((String) actor) + ",";
        }
        
        System.out.println(lineaActores);
        
        try {
            FileWriter fw = new FileWriter("src/datos/actores/actores.txt", true);
            PrintWriter pw = new PrintWriter(fw);
            pw.print(lineaActores);
            
            pw.flush();
            pw.close();
            
        } catch (FileNotFoundException ex) {
            System.out.println("Error-> "+ex.getMessage());
        } catch (IOException ex) {
             System.out.println("Error-> "+ex.getMessage());
        }
    }
    //---------Metodo que mueve los actores seleccionados de una lista a otra------------------------------------
    private static void mueveActores(JList listSeleccionada, DefaultListModel modelSelecList, DefaultListModel modelNewList) {
        String actor;

        for (Object actorSelec : listSeleccionada.getSelectedValuesList()) {
            actor = (String) actorSelec;
            modelNewList.addElement(actor);
            modelSelecList.removeElement(actor);
        }   
        ordenaJList(modelNewList);
    }
  //----------------------------------------------------------------------------
    void cargarCaratulas(){
       File dirCaratulas = new File("src/img");
        
        String[] listaImagenes=dirCaratulas.list();
        
        panelCaratulas.setLayout(new GridLayout(1,listaImagenes.length,10, 10));
        Dimension tamaño=new Dimension (100,100);
        for (int i = 0; i < listaImagenes.length; i++) {
           
          ImageIcon fot = new ImageIcon("src/img/"+listaImagenes[i]);  
     
          Icon icono = new ImageIcon(fot.getImage().getScaledInstance(100, 100, Image.SCALE_DEFAULT));
          
          JLabel et = new JLabel( icono);
          et.setName(listaImagenes[i]);
          et.setPreferredSize(tamaño);
         
          et.addMouseListener(new MouseAdapter(){
              @Override
              public void mouseClicked(MouseEvent e) {
                  super.mouseClicked(e); //To change body of generated methods, choose Tools | Templates.
                  et.setBorder(BorderFactory.createLineBorder(Color.red,3,true));
                  etiquetaActual.setBorder(null);
                  System.out.println("et-> "+et.getIcon());
                  etiquetaActual=et;
                  
                  if (e.getClickCount() == 2 && e.getButton() == MouseEvent.BUTTON1) {
                    JLabel label = ((JLabel) e.getSource());
                   // ImageIcon imageIcon = (ImageIcon) label.getIcon();
                    
                    ImageIcon imageIcon = new ImageIcon("src/img/"+label.getName()); 
                    
                    Image img = imageIcon.getImage();
                    ImageIcon icon = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(etiquetaFoto.getWidth(), etiquetaFoto.getHeight(), java.awt.Image.SCALE_SMOOTH));
                    etiquetaFoto.setIcon(icon);
                    
                    nuevaCaratula.setText(label.getName());
                  }
                  
              }
            /*  
              public void mousePressed(MouseEvent e) {
                JComponent c = (JComponent) e.getSource();
                TransferHandler handler = c.getTransferHandler();
                handler.exportAsDrag(c, e, TransferHandler.COPY);
              }*/
              
          });
          
          et.addMouseMotionListener(new MouseMotionAdapter() {
              @Override
              public void mouseDragged(MouseEvent e) {
                  super.mouseDragged(e);
                  JComponent c = (JComponent) e.getSource();
                  TransferHandler handler = c.getTransferHandler();
                  handler.exportAsDrag(c, e, TransferHandler.COPY);
              }
              
              
          });
          
          et.setTransferHandler(new TransferHandler("icon"));
          panelCaratulas.add( et );
          etiquetaActual=et;
        }
    }  
    
    

    
}//Class
